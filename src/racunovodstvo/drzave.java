/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package racunovodstvo;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import javax.swing.JTable;
import static racunovodstvo.Login.value;

/**
 *
 * @author gogi
 */
public class drzave extends javax.swing.JFrame {

    DefaultTableModel tm;
    int dovoljenjaDodajDrzavo, dovoljenjaSpremeniDrzavo;
    /**
     * Creates new form drzave
     */
    public drzave() {
        initComponents();
    }
    
        public void populateDrzava(){
        Connection con = null;
        PreparedStatement pst = null;
        ResultSet rs = null;        
        ResultSet rs2 = null;        
        PreparedStatement pst2 = null;
        
        //String parrent="a";

        String [] aryNastavitve;
        aryNastavitve=new String[3];
        int i=0;
        
		try (BufferedReader br = new BufferedReader(new FileReader("properties.txt")))//preberi nastavive iz datoteke
		{

			String trenutnaVrstica;

			while ((trenutnaVrstica = br.readLine()) != null) { //preberi nastavitve v tabelo				
                            aryNastavitve[i]=trenutnaVrstica;
                            i++;                            
			}

		} catch (IOException e) {
			e.printStackTrace();
		}
                
                String dburl = aryNastavitve[0];//spremenjivke iz tabele
                String dbuser = aryNastavitve[1];
                String dbpassword = aryNastavitve[2];                

                try {
            con = DriverManager.getConnection(dburl, dbuser, dbpassword);
            pst = con.prepareStatement("SELECT sifraDrzave, kratica, opis FROM drzave");            
            rs = pst.executeQuery();
            pst2 = con.prepareStatement("SELECT spremeniDrzavo FROM dovoljenja WHERE skupina=?");
            pst2.setInt(1, Login.skupina);
            rs2 = pst2.executeQuery();
            
            if (rs2.next()) {           
              dovoljenjaSpremeniDrzavo=rs2.getInt("spremeniDrzavo");
            }
            
        } catch (SQLException ex) {
           // Logger lgr = Logger.getLogger(Version.class.getName());
            //lgr.log(Level.SEVERE, ex.getMessage(), ex);
        }

        try {

            ResultSetMetaData rsmd = rs.getMetaData();
            int columnCount = rsmd.getColumnCount();

            tm = (DefaultTableModel) jTable2.getModel();
            jTable2.setModel(tm);

            jTable2.setRowSelectionAllowed(true);
            tm.setColumnCount(0);

            // add specified columns to table
            for (i = 1; i <= columnCount; i++ ) {
            tm.addColumn(rsmd.getColumnName(i));
            }   

        // clear existing rows
        tm.setRowCount(0);

        // add rows to table
        while (rs.next()) {
            //parrent = rs.getString("konto");
            //osnovna.test.setText(String.valueOf(parrent));
            String[] a = new String[columnCount];
            for(i = 0; i < columnCount; i++) {
                a[i] = rs.getString(i+1);
            }
        tm.addRow(a);
        }
        tm.fireTableDataChanged();

        // Close ResultSet and Statement
        rs.close();
        pst.close();

        } catch (Exception ex) { 
    //JOptionPane.showMessageDialog(this, ex, ex.getMessage(), WIDTH, null);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;   //Disallow the editing of any cell
            }
        };
        dodajDrzavo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        populateDrzava();
        jTable2.setModel(tm);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        dodajDrzavo.setText("Dodaj dr≈æavo");
        Connection con = null;
        PreparedStatement pst = null;
        ResultSet rsDovoljenja = null;

        String [] aryNastavitve;
        aryNastavitve=new String[3];
        int i=0;

        try (BufferedReader br = new BufferedReader(new FileReader("properties.txt")))//preberi nastavive iz datoteke
        {

            String trenutnaVrstica;

            while ((trenutnaVrstica = br.readLine()) != null) { //preberi nastavitve v tabelo
                aryNastavitve[i]=trenutnaVrstica;
                i++;
            }

        } catch (IOException e) {
            e.printStackTrace();
        }

        String dburl = aryNastavitve[0];//spremenjivke iz tabele
        String dbuser = aryNastavitve[1];
        String dbpassword = aryNastavitve[2];

        try {
            con = DriverManager.getConnection(dburl, dbuser, dbpassword);

            pst = con.prepareStatement("SELECT * FROM dovoljenja WHERE skupina=?");
            pst.setInt(1,Login.skupina);
            rsDovoljenja = pst.executeQuery();

            if (rsDovoljenja.next()) {
                dovoljenjaDodajDrzavo=rsDovoljenja.getInt("dodajDrzavo");
            }

        } catch (SQLException ex) {

        }

        finally {
            try {

                if (pst != null) {
                    pst.close();
                }
                if (con != null) {
                    con.close();
                }

            } catch (SQLException ex) {

            }
        }
        if (dovoljenjaDodajDrzavo==0)
        {
            dodajDrzavo.setEnabled(false);
        }
        dodajDrzavo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dodajDrzavoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 83, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dodajDrzavo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 12, Short.MAX_VALUE)
                .addComponent(dodajDrzavo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dodajDrzavoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dodajDrzavoActionPerformed
        new dodajDrzavo().setVisible(true);
    }//GEN-LAST:event_dodajDrzavoActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        if (evt.getClickCount() == 2){
            if(dovoljenjaSpremeniDrzavo==1)
            getValueOfSelectedRow();            
        }
    }//GEN-LAST:event_jTable2MouseClicked

        public void getValueOfSelectedRow(){
        int row = jTable2.getSelectedRow();
        value=jTable2.getValueAt(row, 0);
        Login.staraDrzava=String.valueOf(value);
        //osnovna.test.setText(Login.stariKonto);
        new spremeniDrzavo().setVisible(true);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(drzave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(drzave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(drzave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(drzave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new drzave().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton dodajDrzavo;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
